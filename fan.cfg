#################################################
#Temperatur Sensor
#################################################
[temperature_sensor chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: z:PA2
min_temp: 10
max_temp: 70

[temperature_sensor mcu_Z]
sensor_type: temperature_mcu
sensor_mcu: z
min_temp: 5
max_temp: 100

[temperature_sensor MCU_Head0]
sensor_type: temperature_mcu
sensor_mcu: head0
min_temp: 5
max_temp: 100

#[temperature_sensor MCU X/Y/E]
#sensor_type: temperature_mcu
#min_temp: 5
#max_temp: 100

#####################################################################
#  Fan Control
#####################################################################

[heater_fan extruder_fan]
pin: head0:PA1  # "FAN0"
heater: extruder
heater_temp: 50.0
max_power: 1.0
kick_start_time: 0.5
##	If you are experiencing back flow, you can reduce fan_speed
fan_speed: 1.0

[fan]
pin: PB7  # "FAN1"
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[temperature_fan raspberry_pi]
##	Controller fan - Raspberry PI
pin: PB6
sensor_type: temperature_host
kick_start_time: 0.5
off_below: 0.10
min_temp: 10
max_temp: 80
target_temp: 40
max_speed: 0.7
min_speed: 0.0
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
pid_deriv_time: 2.0

[temperature_fan MCU]
##	Controller fan - MCU
pin: PB5
sensor_type: temperature_mcu
kick_start_time: 0.5
off_below: 0.10
min_temp: 10
max_temp: 80
target_temp: 40
max_speed: 1.0
min_speed: 0.0
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
pid_deriv_time: 2.0

##  Nevermore Micro filter
##  - Z board, E1 Connector
[fan_generic nevermore]
pin: z:PB6
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10

[fan_generic Exhaust]
pin: z:PB5
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: z:PA2
kick_start_time: 0.5
off_below: 0.10
#min_temp: 10
#max_temp: 80
#target_temp: 58
#max_speed: 0.8
#min_speed: 0.0
#control: pid
#pid_Kp: 2.0     ;40
#pid_Ki: 5.0     ;0.2
#pid_Kd: 0.5     ;0.1
#pid_deriv_time: 2.0



## dummy output to get an switch in Mainsail
## any unused mcu pin can be defined you will not connect anything
## as I use the rPi as mcu I will use a pin from it
## Off -> M106 will update fan
## On -> M106 can not uodate fan
[output_pin lock_M106]
pin: rpi: gpio16
value:0

#####################################################################
#  Macros
#####################################################################
# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case
[gcode_macro M106]
description: set fan with manual override and lock option
rename_existing: M106.1
gcode:
  {% if printer['output_pin lock_M106'].value|int == 0 or params.M|default(0) == '1' %}
    M106.1 {rawparams}
  {% else %}
    {action_respond_info("M106 update is locked")}
  {% endif %}
  
[gcode_macro M141]
description: Set temperature of chamber fan
gcode: SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={params.S|default(0)}
    
[gcode_macro _SET_FILTER]
description: Helper: Set Nevermore filter speed
gcode: SET_FAN_SPEED FAN=filter SPEED={params.S|default(0)}

[gcode_macro _FILTER_ON]
description: Helper: Nevermore on
gcode: _SET_FILTER S={printer['gcode_macro _USER_VARIABLE'].peripheral.filter.on_val}
  
[gcode_macro FILTER]
description: Toggle Nevermore fan
gcode:
  {% if printer['fan_generic filter'].speed|float > 0.0 %} _SET_FILTER {% else %} _FILTER_ON {% endif %}
  _FILTER_INFO

[delayed_gcode _DELAY_FILTER_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    _SET_FILTER
    _FILTER_INFO
  {% endif %}

##  Chamber Ventilation Control in Mainsail
[gcode_macro VENT]
description: Toggle Chamber fan
gcode:
    {% if printer['temperature_fan chamber'].target|float > 0 and 
          printer['temperature_fan chamber'].target|float <= printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val|float %}
        M141
    {% else %}
        M141 S{printer['gcode_macro _USER_VARIABLE'].peripheral.vent.on_val}
    {% endif %}
    _VENT_INFO

[delayed_gcode _DELAY_VENT_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    M141
    _VENT_INFO
  {% endif %}

[gcode_macro _VENT_INFO]
description: Helper: Print chamber fan temperature
gcode:
  {% set txt = "off" if printer['temperature_fan chamber'].target == 0 
          else "target temp: %2dC" % printer['temperature_fan chamber'].target %}
  {action_respond_info("Chamber fan %s" % txt)}
    
[gcode_macro _FILTER_INFO]
description: Helper: Print Nevermore speed
gcode: {action_respond_info("Filter fan %s" % 'on' if printer['fan_generic filter'].speed|float > 0.0 else 'off')}