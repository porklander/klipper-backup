

######################### PRESSURE ADVANCE #########################

# This will just set a default value for PA per filament temp. 
# If PS/SS filament gcode sets pressure advance, it will take precendence over this, as it runs after.
# Pretty hacky way to do it, but it works. Better way would probably be to pass filament type as a variable.

[gcode_macro TEMPADJUSTPA]
gcode:
	# ABS
	{% if printer.heater_bed.target >= 100 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.04

	## PETG
	#{% elif printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
	#	SET_PRESSURE_ADVANCE ADVANCE=

	# PLA
	{% elif printer.heater_bed.target <= 65 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.0
	# Catch-all
	{% else %}
		SET_PRESSURE_ADVANCE ADVANCE=0.0
	{% endif %}


###################################################################
#         Printing macros 
#####################################################################
[gcode_macro COOLDOWN]
description: Shuts down the printer
gcode:
    M84               ; Motors off
    TURN_OFF_HEATERS
    M117

[gcode_macro PREPARE_PRINT]
description: Start preparing for printing
gcode:
    {% set bedtemp = params.BED|default(110)|int %}
    STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp}
    STATUS_HOMING
    CG28
    PARKCENTER
    STATUS_HEATING
    M106 S255
    M117 Heating

[gcode_macro G32]
description: Home and QGL
gcode:
    # BED_MESH_CLEAR
    CLEAN_NOZZLE                            ; Moves back to previous location
    STATUS_HOMING
    CG28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    ZG28
    PARKCENTER
    M117

[gcode_macro HEATSOAK]
gcode:
	# Parameters
	{% set t = params.T|default(110)|int %}
	{% set move = params.MOVE|default(1)|int %}

	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=0  ; cancel off timer (if there is one)
	SET_FAN_SPEED FAN=Exhaust SPEED=0		 		; turn off exhaust fan
	#SET_PIN PIN=caselight VALUE=1					; turn on case light
    STATUS_HEATING
	M140 S{t}										; heat bed
	{% if t >= 100 %}
		M104 S150									; set hotend to no-ooze temp
		M106 S205 									; turn on part fan (80%)
	{% else %}
		M106 S0 									; turn part fan off
	{% endif %}
	{% if move == 1 %}
		CG28										; conditional home
		PARKCENTER						 			; move to bed
	{% endif %}

[gcode_macro PRINT_START]
variable_chamber_temp: 0
; gcode parameters for area bed mesh
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
gcode:
# Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.EXTRUDER|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}

    clear_pause
    SET_GCODE_OFFSET Z=0.00 MOVE=0
    STATUS_HEATING
	SET_FAN_SPEED FAN=nevermore SPEED=0.5															; set Nevermore to 50%
	M104 S150
    STATUS_HOMING
    CG28                                                                                   ; home xyz
	{% if printer["temperature_sensor chamber"].temperature < chamber-10 %}				              				; - if chamber is not at temp yet:
		HEATSOAK T={bedtemp} MOVE=1																	; 	heatsoak macro + park in center
		M140 S{bedtemp+20} 																		; 	wait for bed final temp
  		TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}	           							; 	wait for chamber final temp
        M190 S{bedtemp}
        M117 Preheat 15min..	    
        G4 P900000
    {% else %}																				; - if chamber is already at temp:
		{% if printer.heater_bed.temperature < (bedtemp-2) %}												; -- but bed is not fully heated (within 2C):
			HEATSOAK T={bedtemp} MOVE=1																; 		heatsoak and park
			M190 S{bed} 																	; 		wait for bed final temp
		{% else %}																			; -- and bed is already heated:
			HEATSOAK T={bedtemp} MOVE=0																; 		"heatsoak" without parking (only still calling this because it does some other things like turn off exahaust fan)
		{% endif %}
	{% endif %}
    STATUS_HEATING
    M190 S{bedtemp} 	    
    M106 S0
    STATUS_HEATING                                                               # Sets SB-leds to heating-mode
    M109 S150                                                                    ; home with non oozing but warm nozzle
    G32                                                                          ; home all axes, QGL, Calibrate_z
    STATUS_MESHING
    BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}                                                                    ; bed hasn't been great for thin first layers
    #PARKCENTER                                                                   ; move nozzle away from bed
    M117 Heating hotend  
    STATUS_HEATING                                                               # Sets SB-leds to heating-mode
    M109 S{hotendtemp}                                                           ; wait for hotend temp
    INITIAL_LOAD_LOCATION                                                        ; Move to the best location for loading filament
	TEMPADJUSTPA																 ; change PA based on bed temp
    _SET_PLATE_OFFSET     
    SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.0)|float} MOVE=1
    G21                                                                          ; set units to millimeters
    G90                                                                          ; use absolute coordinates
    M83                                                                          ; use relative distances for extrusion
    M107                                                                         ; turn off fan
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0                           ; disable clog detention by default
    M117 Printing
    STATUS_BUSY                                                                  # Sets SB-leds to printing-mode


[gcode_macro PRINT_END]
description: Run after a print is finished, keep the printer ready to go again
gcode:
    {% set unload = params.UNLOAD_AT_END|default(0)|int %}
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-1.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
	M140 S0												                           ; return the bed to temp, some slicers like to turn it off
    {% if unload|int == 1 %}
      ERCF_EJECT
    {% endif %}
	M104 S127
    M109 S150
    CLEAN_NOZZLE
    M107                                                                           ; turn off fan
	M104 S0						 	    			 							   ; turn only the hotend of
    G90                           	    			 													; absolute positioning
	PARKREAR  							; park nozzle at rear
    BED_MESH_CLEAR
	UPDATE_DELAYED_GCODE ID=EXHAUST_OFF DURATION=120													; turn exhaust off in 2 min
	UPDATE_DELAYED_GCODE ID=DELAYED_OFF DURATION=1800	 												; turn everything off in 30 min
	RESETSPEEDS																							; reset speed, accel etc to configured max values
	SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0														; disable XYE steppers (not z)
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    #SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=0
    #SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=0
    #SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=0
    #SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0
    M117 Complete


[delayed_gcode EXHAUST_OFF]
gcode:
	SET_FAN_SPEED FAN=Exhaust SPEED=0

[delayed_gcode DELAYED_OFF]
gcode:
	OFF  

# Just a shortcut to turn EVERYTHING off with one command (beds, heaters, motors, lights)
[gcode_macro OFF]
gcode:
	M84												; turn steppers off
    TURN_OFF_HEATERS								; turn bed / hotend off
    M107                         	   			 	; turn print cooling fan off
	SET_FAN_SPEED FAN=Exhaust SPEED=0  				; turn exhaust fan off
	SET_FAN_SPEED FAN=BedOuter SPEED=0				; bed fan off
	SET_FAN_SPEED FAN=BedInner SPEED=0				; bed fan off
	#SET_PIN PIN=caselight VALUE=0					; turn light off

######################### MISC #########################

# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT so we don't have to wait for PID to level off.
[gcode_macro M109]
rename_existing: M99109
gcode:
	#Parameters
	{% set s = params.S|float %}
	
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+5}

[gcode_macro RESETSPEEDS]
gcode:
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} 
	SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}  
	SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity} 

######################### FILAMENT #########################

[gcode_macro UNLOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	M83                                   ; set extruder to relative
	G1 E10 F600                           ; extrude a little to soften tip 
	G1 E-100 F1800                        ; retract filament completely
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 ; set extruder to relative
	G1 E90 F600
	RESTORE_GCODE_STATE NAME=LOADFILAMENT
   
[gcode_macro HOT_UNLOAD]
gcode:
	# Parameters
	{% set t = params.T|default(240)|int %}
	
	M104 S{t}
	PARKFRONT
	M109 S{t}
    UNLOAD_FILAMENT
	
[gcode_macro HOT_LOAD]
gcode:
	# Parameters
	{% set t = params.T|default(240)|int %}
	
	M104 S{t}
	PARKFRONT
	M109 S{t}
    LOAD_FILAMENT

[gcode_macro INITIAL_LOAD_LOCATION]
description: Go to the best home location for loading the filament at the start of the print which keeps the bowden as straight as possible
gcode:
    G90
    G0 X47 Y10 Z5 F12000

######################### FLUIDD WEB MACROS #########################

# These are specified as macros just so they show up in Fluidd/Mainsail.

[gcode_macro SETPA]
gcode:
	# Parameters
	{% set pa = params.PA|default(0)|float %}

	SET_PRESSURE_ADVANCE ADVANCE={pa}

[gcode_macro SETPASMOOTH]
gcode:
	# Parameters
	{% set smooth = params.SMOOTH|default(0)|float %}
	
	SET_PRESSURE_ADVANCE SMOOTH_TIME={smooth}
